name: Deploy To Ec2 

on:
  push:
    branches:
      - main

jobs:
    Deploy:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: source/back-end/study-buddy
        steps:
            - name: Git Hub Repository에 올린 파일들을 불러오기 
              uses: actions/checkout@v4

            - name: JDK 21버전 설치
              uses: actions/setup-java@v4
              with:
                distribution: 'temurin'
                java-version: 21

            - name: unzip 설치
              run: sudo apt-get update && sudo apt-get install -y unzip

            - name: Gradle Wrapper 생성 (Gradle 8.9)
              run: |
                curl -sL https://services.gradle.org/distributions/gradle-8.9-bin.zip -o gradle.zip
                unzip -q gradle.zip -d $HOME
                $HOME/gradle-8.9/bin/gradle wrapper --gradle-version 8.9
                rm gradle.zip

            - name: application.yml 파일 생성
              run : mkdir -p src/main/resources && printf "%s" "${{ secrets.APPLICATION_PROPERTIES }}" > src/main/resources/application.yml

            - name: Gradle 실행 권한 부여
              run: chmod +x ./gradlew

            - name : 테스트 및 빌드하기 
              run : ./gradlew clean build

            - name : 빌드된 파일 이름 변경하기 
              run : mv ./build/libs/*SNAPSHOT.jar ./project.jar

            - name: 압축하기
              run: tar -czvf $GITHUB_SHA.tar.gz project.jar -C ../../../ appspec.yml scripts

            - name: AWS Resource에 접근할 수 있게 AWS credentials 설정
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-region: ap-northeast-2
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            
            - name: S3 버킷 존재 확인 및 생성
              run: |
                if ! aws s3api head-bucket --bucket study-buddy-server 2>/dev/null; then
                  aws s3api create-bucket \
                    --bucket study-buddy-server \
                    --region ap-northeast-2 \
                    --create-bucket-configuration LocationConstraint=ap-northeast-2
                fi

            - name: S3에 프로젝트 폴더 업로드하기
              run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.tar.gz s3://study-buddy-server/$GITHUB_SHA.tar.gz

            - name: Code Deploy를 활용해 EC2에 프로젝트 코드 배포
              run: aws deploy create-deployment
                --application-name study-buddy-server
                --deployment-config-name CodeDeployDefault.AllAtOnce
                --deployment-group-name Production
                --s3-location bucket=study-buddy-server,bundleType=tgz,key=$GITHUB_SHA.tar.gz 