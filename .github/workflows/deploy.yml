name: Deploy To Ec2 

on:
  push:
    branches:
      - main

jobs:
    Deploy:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: source/back-end/study-buddy
        steps:
            - name: Git Hub Repository에 올린 파일들을 불러오기 
              uses: actions/checkout@v4

            - name: JDK 21버전 설치
              uses: actions/setup-java@v4
              with:
                distribution: 'temurin'
                java-version: 21

            - name: unzip 설치
              run: sudo apt-get update && sudo apt-get install -y unzip

            - name: Gradle Wrapper 생성 (Gradle 8.9)
              run: |
                curl -sL https://services.gradle.org/distributions/gradle-8.9-bin.zip -o gradle.zip
                unzip -q gradle.zip -d $HOME
                $HOME/gradle-8.9/bin/gradle wrapper --gradle-version 8.9
                rm gradle.zip

            - name: application.yml 파일 생성
              run : mkdir -p src/main/resources && printf "%s" "${{ secrets.APPLICATION_PROPERTIES }}" > src/main/resources/application.yml

            - name: Gradle 실행 권한 부여
              run: chmod +x ./gradlew

            - name : 테스트 및 빌드하기 
              run : ./gradlew clean build

            - name : 빌드된 파일 이름 변경하기 
              run : mv ./build/libs/*SNAPSHOT.jar ./project.jar

            - name: SCP로 EC2에 빌드된 파일 전송하기 
              uses: appleboy/scp-action@v0.1.7
              with:
                host: ${{ secrets.EC2_HOST }}
                username: ${{ secrets.EC2_USERNAME }}
                key: ${{ secrets.EC2_KEY }}
                source: source/back-end/study-buddy/project.jar
                strip_components: 3
                target: /home/ubuntu/study-buddy/back-end/tobe

            - name: SSH(원격)로 EC2 접속하기 
              uses : appleboy/ssh-action@master 
              with:
                host: ${{ secrets.EC2_HOST }}
                username: ${{ secrets.EC2_USERNAME }}
                key: ${{ secrets.EC2_KEY }}
                script: |
                    rm -rf /home/ubuntu/study-buddy/back-end/current
                    mkdir /home/ubuntu/study-buddy/back-end/current
                    mv /home/ubuntu/study-buddy/back-end/tobe/project.jar /home/ubuntu/study-buddy/back-end/current/project.jar
                    cd /home/ubuntu/study-buddy/back-end/current
                    sudo fuser -k -n tcp 8088 || true
                    nohup java -jar project.jar > ./output.log 2>&1 &
                    rm -rf /home/ubuntu/study-buddy/back-end/tobe